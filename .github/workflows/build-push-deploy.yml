name: Build and Push Docker Images

on:
  workflow_dispatch:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service:
          - name: blog:latest
            path: ./blog
          - name: portfolio:latest
            path: ./portfolio

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GH_SECRET }}" | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build ${{ matrix.service.path }} -t ${{ env.REGISTRY }}/${{ github.actor }}/${{ matrix.service.name }}
          docker push ${{ env.REGISTRY }}/${{ github.actor }}/${{ matrix.service.name }}

  deploy:
    needs: build-and-push
    name: Deploy to VPS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: copy docker compose prod
        run: |
          scp docker-compose.prod.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.WORK_DIR }}/docker-compose.yml

      - name: connect and pull
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '
            cd ${{ secrets.WORK_DIR }} &&
            docker compose pull &&
            docker compose up -d &&
            exit
          '
      - name: cleanup
        run: rm -rf ~/.ssh
